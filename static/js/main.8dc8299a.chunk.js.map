{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","timerId","this","setInterval","date","setState","console","log","prevProps","name","props","clearInterval","className","React","Component","clockNames","App","isClockVisible","clockName","getClockName","randomNewName","Math","floor","random","length","showClock","hideClock","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"iPAWaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,IAAMC,EAAa,IAAIL,KAEvB,EAAKM,SAAS,CAAEP,KAAMM,EAAKJ,uBAE3BM,QAAQC,IAAIH,EAAKJ,wBAChB,OAdP,gCAiBE,SAAmBQ,GACjB,IAAQC,EAASP,KAAKQ,MAAdD,KAEJD,EAAUC,OAASA,GAErBH,QAAQC,IAAR,qCAA0CC,EAAUC,KAApD,eAA+DA,MAtBrE,kCA0BE,WACMP,KAAKD,SACPU,cAAcT,KAAKD,WA5BzB,oBAgCE,WACE,IAAQQ,EAASP,KAAKQ,MAAdD,KACAX,EAASI,KAAKL,MAAdC,KAER,OACE,sBAAKc,UAAU,QAAf,UACE,oBAAIA,UAAU,eAAd,SACGH,IAEH,mBAAGG,UAAU,cAAc,UAAQ,OAAnC,wBACWd,EADX,kBAzCR,GAA2Be,IAAMC,WCE3BC,EAAuB,CAC3B,aACA,gBACA,YACA,cACA,kBACA,eACA,mBACA,aACA,kBACA,yBAGIC,E,4MACJnB,MAAQ,CACNoB,gBAAgB,EAChBC,UAAW,S,EAGbC,aAAe,WACb,IAAMC,EAAgBL,EACpBM,KAAKC,MAAMD,KAAKE,SAAWR,EAAWS,SAGxC,EAAKnB,SAAS,CAAEa,UAAWE,K,EAG7BK,UAAY,WACV,EAAKpB,SAAS,CAAEY,gBAAgB,K,EAGlCS,UAAY,WACV,EAAKrB,SAAS,CAAEY,gBAAgB,K,4CAGlC,WACE,MAAsCf,KAAKL,MAAnCoB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,sBAAKN,UAAU,MAAf,UACGK,GAAkB,cAAC,EAAD,CAAOR,KAAMS,IAEhC,sBAAKN,UAAU,UAAf,UACE,wBACEe,KAAK,SACLf,UAAU,gBACVgB,QAAS1B,KAAKuB,UAHhB,wBAOA,wBACEE,KAAK,SACLf,UAAU,gBACVgB,QAAS1B,KAAKwB,UAHhB,wBAOA,wBACEC,KAAK,SACLf,UAAU,gBACVgB,QAAS1B,KAAKiB,aAHhB,uC,GA5CQN,IAAMC,WAyDTE,IChFfa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8dc8299a.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\ninterface Props {\n  name: string;\n}\n\ninterface State {\n  time: string;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  };\n\n  timerId?: NodeJS.Timer;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      const date: Date = new Date();\n\n      this.setState({ time: date.toLocaleTimeString() });\n      // eslint-disable-next-line no-console\n      console.log(date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { name } = this.props;\n\n    if (prevProps.name !== name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevProps.name} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { name } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"clock\">\n        <h2 className=\"clock__title\">\n          {name}\n        </h2>\n        <p className=\"clock__text\" data-cy=\"time\">\n          {`It's ${time} now!`}\n        </p>\n      </div>\n    );\n  }\n}\n","// import { extend } from 'cypress/types/lodash';\nimport React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ninterface State {\n  isClockVisible: boolean;\n  clockName: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface Props {}\n\nconst clockNames: string[] = [\n  'Good clock',\n  'Amazing clock',\n  'Sad clock',\n  'Tired clock',\n  'Ukrainian clock',\n  'Simple clock',\n  'Not simple clock',\n  'Busy clock',\n  'Very nice clock',\n  'The clock of my heart',\n];\n\nclass App extends React.Component<Props, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 'Clock',\n  };\n\n  getClockName = () => {\n    const randomNewName = clockNames[\n      Math.floor(Math.random() * clockNames.length)\n    ];\n\n    this.setState({ clockName: randomNewName });\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"app\">\n        {isClockVisible && <Clock name={clockName} />}\n\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className=\"buttons__item\"\n            onClick={this.showClock}\n          >\n            Show Clock\n          </button>\n          <button\n            type=\"button\"\n            className=\"buttons__item\"\n            onClick={this.hideClock}\n          >\n            Hide Clock\n          </button>\n          <button\n            type=\"button\"\n            className=\"buttons__item\"\n            onClick={this.getClockName}\n          >\n            Set random name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}